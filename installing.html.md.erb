---
title: Installing and Configuring Kubernetes Service Manager for PCF
owner: Platform Engineering (KSM Team)
---
<strong><%= modified_date %></strong>

<%= partial ("beta-notice") %>

This topic describes how to install and configure Kubernetes Service Manager
(KSM) for Pivotal Cloud Foundry (PCF).

##<a id='ksm'></a>  Install the KSM CLI

To install the KSM CLI, do the following:

1. Log in and navigate to **Kubernetes Service Manager for PCF (KSM)** in
[Pivotal Network](https://network.pivotal.io/).

1. Click **Kubernetes Service Manager CLIs** and download the CLI for your operating system.

1. Rename the downloaded binary file to `ksm`.

1. If you are using MacOS or Linux,
to make the KSM binary act as an executable file, run the following command :

    <pre class="terminal">chmod +x ksm</pre>

1. Move the binary file into your `PATH`.
If you are using MacOS or Linux, to move the binary file into your `PATH`, run the following command:

    <pre class="terminal">mv ksm /usr/local/bin/ksm</pre>

##<a id='install'></a> Download and Install the Tile

To add KSM for PCF to Ops Manager, do the following:

1. Log in and download the Kubernetes Service Manager for PCF file from
[Pivotal Network](https://network.pivotal.io/).

1. Choose a foundation in which [Pivotal Application Service (PAS)](https://pivotal.io/platform/pivotal-application-service)
has been installed. KSM registers itself with the PAS marketplace and therefore needs an environment with it installed.

1. Navigate to the Ops Manager Installation Dashboard for that foundation and click **Import a Product**
to upload the product file.

1. Under **Import a Product**, click **+** next to the version number of KSM for PCF.
This adds the tile to your staging area.

1. Click the newly-added **Kubernetes Service Manager for PCF** tile to open its configuration panes.

## <a id="configure"></a>Configure the Tile
Follow the steps below to configure KSM for PCF service.


###<a id='az-networks'></a> Configure AZs and Networks

Follow the steps below to select an availability zone (AZ) to run the
service broker and to select networks.

 1. Click **Assign AZs and Networks**

 1. Configure the fields as follows:
   <table>
     <tr><th>Field</th><th>Instructions</th></tr>
     <tr>
        <td><strong>Place singleton jobs in</strong></td>
        <td>Select the AZ that you want the singleton VMs to run in.
            This selection does not affect KSM for PCF.</td>
     </tr>
     <tr>
        <td><strong>Balance other jobs in</strong></td>
        <td>Select additional AZs.
            This selection controls the regions in which KSM for PCF is deployed.</td>
     </tr>
     <tr>
        <td><strong>Network</strong></td>
        <td>Select the same network you use for the Pivotal Application Service (PAS) component VMs.
          To view the network PAS component VMs use, navigate to <strong>PCF Ops Manager</strong> >
          <strong>Pivotal Application Service (PAS)</strong> > <strong>Assign AZs and Networks</strong>.
        </td>
     </tr>
   </table>
    <p class="note warning"><strong>Warning:</strong> If you change the network or its IP address
       after they are assigned your deployment fails. For more information,
       see <a href="https://docs.pivotal.io/rabbitmq-cf/changing-ips.html">Changing Network or IP Addresses Results in a Failed Deployment</a>.</p>

 2. Click **Save**.


### <a id="kubeconfig"></a> Configure Cluster Credentials

To use the Pivotal Container Service Command Line Interface (PKS CLI) to configure
default settings for your kubeconfig, do the following:

1. To retrieve your cluster credentials with the PKS CLI,
   do the procedure in [Retrieve Cluster Credentials](https://docs.pivotal.io/runtimes/pks/cluster-credentials.html#get-credentials).

1. Navigate to `$HOME/.kube/config` and record the following values for your cluster:
  + `certificate-authority-data`. This value is the CA certificate for the PKS cluster.
  + `server`. This value includes both the Kubernetes API endpoint and port in the format `ENDPOINT:PORT`.

1. Create a dedicated [service account](https://kubernetes.io/docs/reference/access-authn-authz/service-accounts-admin/#user-accounts-vs-service-accounts)
with the `cluster-admin` role for KSM to use in the cluster.
With KSM's cluster targeted, run the following shell commands to create a service account and record the token.

```bash
cat <<EOF | kubectl apply -f -
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ksm-admin
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: ksm-cluster-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: ksm-admin
    namespace: kube-system
EOF

secret_name=$(kubectl get serviceaccount ksm-admin --namespace=kube-system -o jsonpath='{.secrets[0].name}')
secret_val=$(kubectl --namespace=kube-system get secret $secret_name -o jsonpath='{.data.token}')
echo ${secret_val} | base64 --decode
```

1. Navigate to **PCF Ops Manager** > **Kubernetes Service Manager for PCF** > **Kubernetes Configuration**.

1. Configure the fields as follows:
   <table class="nice">
  <tr>
  <th>Field</th>
  <th>Instructions</th>
  </tr>
  <tr>
    <td><strong>A base64 encoded PEM Cluster CA certificate</strong></td>
    <td>Enter the value of <code>certificate-authority-data</code> in your kubeconfig.</td>
  </tr>
  <tr>
    <td><strong>K8s API endpoint</strong></td>
    <td>Enter the endpoint value of <code>server</code> in your kubeconfig. </td>
  </tr>
  <tr>
    <td><strong>K8s API endpoint port</strong></td>
    <td>Enter the port value of <code>server</code> in your kubeconfig.</td>
  </tr>
  <tr>
    <td><strong>Token</strong></td>
    <td>Enter the value of <code>token</code> from the `ksm-admin` service account just created.</td>
  </tr>
  </table>

For more information about using kubeconfig files,
see [Organizing Cluster Access Using kubeconfig Files](https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/).

### <a id="storage"></a> Configure Storage

KSM for PCF requires S3-compatible buckets to store offered charts and the chart cache. 
The operator is responsible for backing up this bucket with their IaaS provider. 

If you are using a cloud storage provider that does not natively support S3 buckets, 
you must configure your cloud storage to be compatible with S3 to use KSM for PCF. 
See [Prerequisites](#storage-preq), below. 


#### <a name="storage-preq"></a> Prerequisites

To configure storage for KSM for PCF, you must do the following:

+ **Create a policy and an access key for your cloud storage provider:** Policy creation varies depending
on your cloud storage provider. Pivotal recommends that this account only be used by KSM for PCF.
You should apply a minimal policy that lets the user account upload backups to your S3 store. 
The policy must give KSM for PCF permissions to list and upload buckets. 
For instructions on how to create a policy and access key, see your provider's documentation.

+ **If you are using a cloud storage provider that does not natively support S3 buckets, 
you must configure your cloud storage to an S3 compatible alternative:**
You may use the Minio for PCF tile to add the S3 interface to Azure Blob Storage or Google Cloud Storage (GCS).
For information, see the [Minio for PCF](https://docs.pivotal.io/partners/minio/)
documentation.

+ **If you are using GCS and are not using the Minio tile, you must generate a developer key:** This developer
key is used to configure **Access Key ID** and **Secret Access Key** in the below table.
For instructions on how to generate a developer key,
see [Managing developer keys for a simple migration](https://cloud.google.com/storage/docs/migrating#keys)
in the Google Cloud Storage documentation.

To configure storage, do the following:

1. Navigate to **PCF Ops Manager** > **Kubernetes Service Manager for PCF** > **Storage Configuration**.

1. Configure the fields as follows:

    <table class="nice">
    <tr>
    <th>Field</th>
    <th>Instructions</th>
    </tr>
    <tr>
      <td><strong>Endpoint</strong></td>
      <td>Enter the S3-compatible endpoint URL for uploading backups. The URL cannot start with <code>http://</code> or <code>https://</code>. For example:<br><br>
        <ul>
          <li><code>storage.googleapis.com</code></li>
          <li><code>s3-us-west-2.amazonaws.com</code></li>
        </ul>
        </td>
      </tr>
      <tr>
        <td><strong>Region</strong></td>
        <td> Enter the region where your bucket is located.
          The region defaults to <code>us-east-1</code>.
          Some IaaS providers do not require regions for their buckets.
          For example, Google Cloud Platform Multi-Regional Storage ignores this value.
        </td>
      </tr>
      <tr>
        <td><strong>Bucket Name</strong></td>
        <td>Enter the name of your bucket.</td>
      </tr>
      <tr>
        <td><strong>Access Key ID</strong></td>
        <td>Enter the S3 Access Key ID.</td>
      </tr>
      <tr>
        <td><strong>Secret Access Key</strong></td>
        <td>Enter the Secret Access Key.</td>
      </tr>
      <tr>
        <td><strong>Skip SSL Validation</strong></td>
        <td>Use this to skip validation in environments with things like self-signed certificates for the storage provider. Do not toggle on in production.</td>
      </tr>
    </table>

### <a id="container"></a> Configure Container Registry

When you configure a private registry,
KSM for PCF will install in an offline environment, and can modify your Helm
charts to point to images in the private registry.
Pivotal recommends using a private registry in production.
You will obtain the following values from your container registry, such as Harbor.

To configure a private registry, do the following:

1. Click **Container Registry Configuration**.
1. Enter the **Registry Server URL**. This is the URL including your container registry hostname and project. For example, `gcr.io/myproject`.
This is the location from which KSM will push and pull images.
1. Enter the **Registry Username**. This is the username which KSM will use to push and pull images to the registry.
1. Enter the **Registry Password**. This is the password which KSM will use to push and pull images to the registry.

Any private registry will work, but for Docker Hub specifically, the proper url to use is `docker.io/<repository>`

### <a id="errands"></a>Errands

The pre-delete errand `deregistar` removes the pre-provisioned Kubernetes service from `cf marketplace`
and **deletes all associated service instances and bindings**.
This errand is disabled by default.

### <a id="apply-changes"></a> Apply All Changes

To deploy KSM for PCF and apply your configurations, do the following:

1. Navigate to the Ops Manager Installation Dashboard.

1. If you are using Ops Manager v2.3 or later, click Review Pending Changes.
   For more information about this Ops Manager page,
   see [Reviewing Pending Product Changes](https://docs.pivotal.io/pivotalcf/2-4/customizing/review-pending-changes.html).

1. Click **Apply Changes**.
